<?php

namespace MisionSucre\RipesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ParticipacionPoliticaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParticipacionPoliticaRepository extends EntityRepository
{
    public function findAllOrderedByTriunfadorAndAldea($aldea)
    {
          return $this->getEntityManager()
            ->createQuery(
                "SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol,MisionSucreRipesBundle:Triunfador trf JOIN trf.ambiente am JOIN am.aldea a
                    WHERE pol.user = p.user AND trf.user= p.user AND pol.user = trf.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND am.aldea = :aldea
                    "
            )->setParameters(array('aldea'=>$aldea,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    
    public function findAllOrderedByTriunfadorAndEje($eje)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Triunfador trf JOIN trf.ambiente am JOIN am.aldea a JOIN a.parroquia prq
                    WHERE pol.user = p.user AND trf.user= p.user AND pol.user = trf.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND prq.eje = :eje'
                    
            )->setParameters(array('eje'=>$eje,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByTriunfador()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol, MisionSucreRipesBundle:Triunfador trf JOIN trf.ambiente am JOIN am.aldea a 
                    WHERE lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna)
                    AND pol.user = p.user AND trf.user= p.user AND pol.user = trf.user'
            )->setParameters(array('ninguno'=>"Ninguno","ninguna"=>'Ninguna'))
            ->getResult();
    }
    
    public function findAllOrderedByDocentesAndAldea($aldea)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Docente doc JOIN doc.aldea a
                    WHERE pol.user = p.user AND doc.user= p.user AND pol.user = doc.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND a.id = :aldea'
                    
            )->setParameters(array('aldea'=>$aldea,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByDocentesAndEje($eje)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Docente doc JOIN doc.aldea a JOIN a.parroquia prq
                    WHERE pol.user = p.user AND doc.user= p.user AND pol.user = doc.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND prq.eje = :eje'
                    
            )->setParameters(array('eje'=>$eje,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByDocentes()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Docente doc JOIN doc.aldea a 
                    WHERE lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna)
                    AND pol.user = p.user AND doc.user= p.user AND pol.user = doc.user
                    '
            )->setParameters(array('ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByOperariosAndAldea($aldea)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Operario o JOIN o.aldea a
                    WHERE pol.user = p.user AND o.user= p.user AND pol.user = o.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND a.id = :aldea'
                    
            )->setParameters(array('aldea'=>$aldea,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByOperariosAndeje($eje)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Operario o JOIN o.aldea a JOIN a.parroquia prq
                    WHERE pol.user = p.user AND o.user= p.user AND pol.user = o.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND prq.eje = :eje'
                    
            )->setParameters(array('eje'=>$eje,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByOperarios()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:Operario o JOIN o.aldea a
                    WHERE pol.user = p.user AND o.user= p.user AND pol.user = o.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna)'
                    
            )->setParameters(array('ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByCoordinadoresAndeje($eje)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:CoordinadorAldea ca JOIN ca.aldea a JOIN a.parroquia prq
                    WHERE pol.user = p.user AND ca.user= p.user AND pol.user = ca.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna) AND prq.eje = :eje'
                    
            )->setParameters(array('eje'=>$eje,'ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    public function findAllOrderedByCoordinadores()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT pol.afiliacion,pol.cargo, IDENTITY(p.user) as idusr,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,
                     a.nombre as aldea, a.id as idaldea
                    FROM
                     MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:ParticipacionPolitica pol ,
                    MisionSucreRipesBundle:CoordinadorAldea ca JOIN ca.aldea a 
                    WHERE pol.user = p.user AND ca.user= p.user AND pol.user = ca.user
                    AND lower(pol.cargo) NOT LIKE lower(:ninguno) AND lower(pol.cargo) NOT LIKE lower(:ninguna)'
                    
            )->setParameters(array('ninguno'=>'Ninguno','ninguna'=>'Ninguna'))
            ->getResult();
    }
    
public function NoRegistrados()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT u
                    FROM
                     MisionSucreRipesBundle:User u
                    WHERE NOT EXISTS( SELECT pol FROM MisionSucreRipesBundle:ParticipacionPolitica pol WHERE pol.user=u.id) 
                    '
                    
            )
            ->getResult();
    }
}
