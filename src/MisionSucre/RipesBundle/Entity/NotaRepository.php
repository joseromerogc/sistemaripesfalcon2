<?php

namespace MisionSucre\RipesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * NotaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotaRepository extends EntityRepository
{
    public function BuscarTriundadorActa($idan,$idpt)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT n FROM MisionSucreRipesBundle:Nota n 
                    WHERE n.actanota=:idan AND n.triunfador=:idpt
                '
            )
            ->setParameters(array('idan'=>$idan,'idpt'=>$idpt))->getOneorNullResult();
    }
    public function TriunfadoresVinculadosSinNotas($idan){
        
        return $this->getEntityManager()
            ->createQuery(
                'SELECT DISTINCT t.id,pt.id as idpt, u.username,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,t.condicion, u.id as idusr
                    ,p.celPer,p.telPer, t.becamision, t.sistema
                    FROM MisionSucreRipesBundle:Persona p, MisionSucreRipesBundle:User u,
                    MisionSucreRipesBundle:Triunfador t, MisionSucreRipesBundle:PeriodoTriunfador pt 
                    JOIN pt.periodoacademicoambiente ppamb JOIN ppamb.ambiente a,
                    MisionSucreRipesBundle:ActaNota an
                    WHERE p.user=u.id AND t.user=u.id AND pt.user=u.id AND t.ambiente =a.id
                    AND ppamb.id =an.periodoacademicoambiente AND an.id =:idan AND
                    NOT EXISTS (SELECT n FROM MisionSucreRipesBundle:Nota n JOIN n.actanota ann
                    WHERE ann.id=an.id AND n.triunfador=pt.id)
                    ORDER BY p.priNom, p.segNom
                    '
            )
            ->setParameters(array('idan'=>$idan))      
            ->getResult();
    }
    public function TriunfadoresVinculadosConNotas($idan){
        
        return $this->getEntityManager()
            ->createQuery(
                "SELECT DISTINCT t.id,pt.id as idpt, u.username,p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer,t.condicion, u.id as idusr
                    ,p.celPer,p.telPer, t.becamision, t.sistema, n.valor, n.asistencia
                    FROM MisionSucreRipesBundle:Persona p,MisionSucreRipesBundle:Triunfador t,
                     MisionSucreRipesBundle:PeriodoTriunfador pt JOIN pt.user u,
                    MisionSucreRipesBundle:Nota n JOIN n.actanota an 
                    WHERE an.id =:idan AND t.user = u.id AND p.user=u.id AND
                    n.triunfador=pt.id AND UPPER(n.asistencia ) != 'NM'
                    ORDER BY p.priNom, p.segNom
                    "
            )
            ->setParameters(array('idan'=>$idan))      
            ->getResult();
    }
    
    public function NotasTriunfador($cedula,$idpamb){
        
        return $this->getEntityManager()
            ->createQuery(
                "SELECT DISTINCT n.valor, n.asistencia, uc.nombre, uc.codigo
                    FROM MisionSucreRipesBundle:Persona p,MisionSucreRipesBundle:Triunfador t,
                     MisionSucreRipesBundle:PeriodoTriunfador pt JOIN pt.user u,
                    MisionSucreRipesBundle:Nota n JOIN n.actanota an JOIN an.malla m JOIN m.uc uc
                    WHERE an.periodoacademicoambiente =:idamb AND p.cedPer=:cedula AND t.user = u.id AND p.user=u.id AND
                    n.triunfador=pt.id AND UPPER(n.asistencia ) != 'NM'
                    ORDER BY uc.codigo
                    "
            )
            ->setParameters(array('idamb'=>$idpamb,'cedula'=>$cedula))      
            ->getResult();
    }
    
}
