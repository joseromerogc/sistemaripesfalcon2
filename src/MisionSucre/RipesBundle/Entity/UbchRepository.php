<?php

namespace MisionSucre\RipesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UbchRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UbchRepository extends EntityRepository
{
    public function findAllOrderedByParroquia()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT m.municipio , prq.parroquia , ub.nombre AS ubch, e.nombre as eje,  ub.id AS idubch,
                             SUM ( CASE WHEN (
                             EXISTS 
                            ( SELECT ca FROM MisionSucreRipesBundle:CoordinadorAldea ca WHERE u.id=ca.user) OR
                             EXISTS 
                            ( SELECT d FROM MisionSucreRipesBundle:Docente d WHERE u.id=d.user ) OR
                            EXISTS
                            ( SELECT t FROM MisionSucreRipesBundle:Triunfador t WHERE u.id=t.user ) OR
                             EXISTS
                            ( SELECT op FROM MisionSucreRipesBundle:Operario op WHERE u.id=op.user)
                            )
                             THEN 1 ELSE 0 END )
                             AS cantidad
                              FROM MisionSucreRipesBundle:ParticipacionPolitica pp JOIN pp.ubch ub JOIN ub.parroquia prq JOIN prq.municipio m,
                              MisionSucreRipesBundle:User u, MisionSucreRipesBundle:Eje e
                              WHERE u.id = pp.user AND e.id=prq.eje
                            GROUP BY ub.id
                            ORDER BY m.municipio, prq.parroquia
                    '
            ) 
            ->getResult();
    }
    public function findAllOrderedByEje($eje)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT m.municipio , prq.parroquia , ub.nombre AS ubch, e.nombre as eje,  ub.id AS idubch,
                             SUM ( CASE WHEN (
                             EXISTS 
                            ( SELECT ca FROM MisionSucreRipesBundle:CoordinadorAldea ca WHERE u.id=ca.user) OR
                             EXISTS 
                            ( SELECT d FROM MisionSucreRipesBundle:Docente d WHERE u.id=d.user ) OR
                            EXISTS
                            ( SELECT t FROM MisionSucreRipesBundle:Triunfador t WHERE u.id=t.user ) OR
                             EXISTS
                            ( SELECT op FROM MisionSucreRipesBundle:Operario op WHERE u.id=op.user)
                            )
                             THEN 1 ELSE 0 END )
                             AS cantidad
                              FROM MisionSucreRipesBundle:ParticipacionPolitica pp JOIN pp.ubch ub JOIN ub.parroquia prq JOIN prq.municipio m,
                              MisionSucreRipesBundle:User u, MisionSucreRipesBundle:Eje e
                              WHERE u.id = pp.user AND prq.eje=:eje AND e.id=prq.eje
                            GROUP BY ub.id
                            ORDER BY m.municipio, prq.parroquia
                    '
            ) ->setParameters(array('eje'=>$eje))
            ->getResult();
    }
    
    public function findAllOrderedByAldea($aldea)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT m.municipio , prq.parroquia , ub.nombre AS ubch, e.nombre as eje, ub.id AS idubch,
                             SUM ( CASE WHEN (
                             EXISTS 
                            ( SELECT ca FROM MisionSucreRipesBundle:CoordinadorAldea ca WHERE u.id=ca.user AND ca.aldea=:aldea) OR
                             EXISTS 
                            ( SELECT d FROM MisionSucreRipesBundle:Docente d WHERE u.id=d.user AND d.aldea=:aldea) OR
                            EXISTS
                            ( SELECT t FROM MisionSucreRipesBundle:Triunfador t JOIN t.ambiente a WHERE u.id=t.user AND a.aldea=:aldea) OR
                             EXISTS
                            ( SELECT op FROM MisionSucreRipesBundle:Operario op WHERE u.id=op.user AND op.aldea=:aldea)
                            )
                             THEN 1 ELSE 0 END )
                             AS cantidad
                              FROM MisionSucreRipesBundle:ParticipacionPolitica pp JOIN pp.ubch ub JOIN ub.parroquia prq JOIN prq.municipio m,
                              MisionSucreRipesBundle:User u, MisionSucreRipesBundle:Eje e
                              WHERE u.id = pp.user AND e.id=prq.eje
                            GROUP BY ub.id
                            ORDER BY m.municipio, prq.parroquia
                    '
            ) ->setParameters(array('aldea'=>$aldea))
            ->getResult();
    }
    
    public function findAllOrderedByUbchAndAldea($aldea)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT  p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer, u.id as idusr
                    ,p.celPer,p.telPer, ub.id idubch, ub.nombre AS ubch, u.tip_usr,prq.parroquia,m.municipio 
                              FROM MisionSucreRipesBundle:ParticipacionPolitica pp JOIN pp.ubch ub JOIN ub.parroquia prq JOIN prq.municipio m, 
                              MisionSucreRipesBundle:Persona p JOIN p.user u
                              WHERE u.id = pp.user AND 
                              (
                              u.id IN 
                            ( SELECT IDENTITY(ca.user) FROM MisionSucreRipesBundle:CoordinadorAldea ca WHERE u.id=ca.user AND ca.aldea=:aldea) OR
                             u.id IN 
                            ( SELECT IDENTITY(d.user) FROM MisionSucreRipesBundle:Docente d WHERE u.id=d.user AND d.aldea=:aldea) OR
                            u.id IN 
                            ( SELECT IDENTITY(t.user) FROM MisionSucreRipesBundle:Triunfador t JOIN t.ambiente a WHERE u.id=t.user AND a.aldea=:aldea) OR
                             u.id IN 
                            ( SELECT IDENTITY(op.user) FROM MisionSucreRipesBundle:Operario op WHERE u.id=op.user AND op.aldea=:aldea)
                            )
                            ORDER BY ub.id
                    '
            ) 
                  ->setParameters(array('aldea'=>$aldea))
            ->getResult();
    }
    
    public function findAllOrderedByUbchAndParroquia($ubch)
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT  p.priNom,p.segNom, p.priApe, p.segApe, p.cedPer, p.sexPer, u.id as idusr
                    ,p.celPer,p.telPer, a.id AS idaldea, a.nombre AS aldea, u.tip_usr
                              FROM MisionSucreRipesBundle:ParticipacionPolitica pp JOIN pp.ubch ub JOIN ub.parroquia prq JOIN prq.municipio m, 
                              MisionSucreRipesBundle:Persona p JOIN p.user u,
                              MisionSucreRipesBundle:Aldea a
                              WHERE u.id = pp.user AND ub.id=:ubch AND
                              (
                              u.id IN 
                            ( SELECT IDENTITY(ca.user) FROM MisionSucreRipesBundle:CoordinadorAldea ca WHERE u.id=ca.user AND ca.aldea=a.id) OR
                             u.id IN 
                            ( SELECT IDENTITY(d.user) FROM MisionSucreRipesBundle:Docente d WHERE u.id=d.user AND d.aldea=a.id) OR
                            u.id IN 
                            ( SELECT IDENTITY(t.user) FROM MisionSucreRipesBundle:Triunfador t JOIN t.ambiente am WHERE u.id=t.user AND am.aldea=a.id) OR
                             u.id IN 
                            ( SELECT IDENTITY(op.user) FROM MisionSucreRipesBundle:Operario op WHERE u.id=op.user AND op.aldea=a.id)
                            )
                            ORDER BY p.cedPer
                    '
            )->setParameters(array('ubch'=>$ubch))
            ->getResult();
    }
 
    public function ListaCompleta()
    {
          return $this->getEntityManager()
            ->createQuery(
                'SELECT m.municipio , prq.parroquia , ub.nombre AS ubch, e.nombre as eje, ub.id AS idubch, ub.codigo
                              FROM MisionSucreRipesBundle:Ubch ub JOIN ub.parroquia prq JOIN prq.municipio m,
                              MisionSucreRipesBundle:User u, MisionSucreRipesBundle:Eje e
                              WHERE e.id=prq.eje
                            GROUP BY ub.id
                            ORDER BY m.municipio, prq.parroquia
                    '
            )
            ->getResult();
    }
    
}
